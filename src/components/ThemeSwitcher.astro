---
import SunIcon from '../assets/icons/sun.svg';
import MoonIcon from '../assets/icons/moon.svg';
import ComputerDesktopIcon from '../assets/icons/computer-desktop.svg';
---
<!-- Dropdown menu for theme selection -->
<div class="flex justify-center">
    <div
        class="relative text-left hidden"
        x-data="{
            open: false,
            init() {
                this.$el.classList.remove('hidden');
            },
            toggle() {
                if (this.open) {
                    return this.close()
                }

                this.$refs.button.focus()

                this.open = true
            },
            close(focusAfter) {
                if (! this.open) return

                this.open = false

                focusAfter && focusAfter.focus()
            }
        }"
        x-on:keydown.escape.prevent.stop="close($refs.button)"
        x-on:focusin.window="! $refs.panel.contains($event.target) && close()"
        x-id="['dropdown-button']"
    >
      <div>
        <button
            class="inline-flex justify-center rounded-md px-3 pr-0 py-1 md:py-2 text-sm font-semibold transition-colors bg-transparent focus:outline-none"
            x-ref="button"
            x-on:click="toggle()"
            :aria-expanded="open"
            :aria-controls="$id('dropdown-button')"
            type="button"
        >
          <span id="theme-icon">
              <span x-text="$store.theme.value" class="hidden"></span>
              <span x-show="$store.theme.value === 'light'">
            <SunIcon size={16} />
              </span>
              <span x-show="$store.theme.value === 'dark'">
            <MoonIcon size={16} />
              </span>
              <span x-show="$store.theme.value === 'system'">
            <ComputerDesktopIcon size={16} />
              </span>
          </span>
        </button>
      </div>

      <div
          class="absolute right-0 z-10 mt-2 w-36 origin-top-right rounded-md text-text bg-crust shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
          role="menu"
          aria-orientation="vertical"
          aria-labelledby="theme-switcher-button"
          tabindex="-1"
          x-ref="panel"
          x-show="open"
          x-transition.origin.top.left
          x-on:click.outside="close($refs.button)"
          :id="$id('dropdown-button')"
          style="display: none;"
      >
          <div role="none">
              <template x-for="option in [
                { name: 'Light', theme: 'light', icon: 'sun' },
                { name: 'Dark', theme: 'dark', icon: 'moon' },
                { name: 'System', theme: 'system', icon: 'computer-desktop' }
              ]">
                <button
                  class="px-4 py-2 text-sm flex items-center gap-2 bg-transparent hover:bg-surface0 w-full rounded-none"
                  role="menuitem"
                  tabindex="-1"
                  :class="{ 'text-terminal': $store.theme.value === option.theme }"
                  @click="$store.theme.switch(option.theme)"
                >
                  <!-- Dynamically inject icon based on theme -->
                  <template x-if="option.icon === 'sun'">
            <SunIcon size={16} />
                  </template>
                  <template x-if="option.icon === 'moon'">
            <MoonIcon size={16} />
                  </template>
                  <template x-if="option.icon === 'computer-desktop'">
            <ComputerDesktopIcon size={16} />
                  </template>
                  <div x-text="option.name"></div>
                </button>
              </template>
          </div>
      </div>

    </div>
</div>
