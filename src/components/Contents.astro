---
import {getCollection} from 'astro:content';
import BengaliText from "../components/BengaliText.astro";
import Transliteration from "../components/Transliteration.astro";

const {book, className = ''} = Astro.props;

// Fetch and group sections dynamically based on the book
const sections = await getCollection('books', ({data, slug}) => data.type !== 'book' && slug.startsWith(book.slug));

const groupedSections = Object.values(sections.reduce((grouped, section) => {
    if (!grouped[section.data.chapter]) {
        grouped[section.data.chapter] = {
            chapter: section.data.chapter, chapterTitle: section.data.chapterTitle, sections: [],
        };
    }
    grouped[section.data.chapter].sections.push(section);
    return grouped;
}, {}));

function numberToBengali(num) {
    const bengaliDigits = ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'];
    return String(num)
        .split('')
        .map((digit) => (digit >= '0' && digit <= '9' ? bengaliDigits[digit] : digit))
        .join('');
}
---

<div
        x-data="{
            openSections: {},
            showBengali: $store.language.current === 'bn',
            showTransliteration: $store.language.current === 'en',
            init() {
              // Watch for global state changes and reset local state
              this.$watch('$store.language.current', (newLang) => {
                this.showBengali = newLang === 'bn';
                this.showTransliteration = newLang === 'en';
              });
            },
        }"
        class={`book-contents ${className}`}
>
    <ol class="mt-4">
        {groupedSections
            .sort((a, b) => a.chapter - b.chapter) // Sort chapters by number
              .map((chapter, i) => (
                        <li class="mb-4">
                            <div>
                                <button
                                        @click={`openSections[${chapter.chapter}] = !openSections[${chapter.chapter}]`}
                                        class="w-full text-left hover:text-lavender focus:outline-none"
                                >
                                    <span x-show="showBengali">{numberToBengali(i + 1)}.</span>
                                    <span x-show="showTransliteration">{i + 1}.</span>
                                    {chapter.chapterTitle && (
                                            <>
                                                <BengaliText
                                                        generateTransliteration={false}>{chapter.chapterTitle.bn}</BengaliText>
                                                <Transliteration>{chapter.chapterTitle.en}</Transliteration>
                                            </>)}
                                    <span
                                            class="text-sm text-gray-500 ml-2"
                                            x-text={`openSections[${chapter.chapter}] ? '(Hide)' : '(Show)'`}
                                    ></span>
                                </button>
                            </div>
                            <ol
                                    class="pl-4 transition-all overflow-hidden"
                                    x-show={`openSections[${chapter.chapter}]`}
                                    x-transition:enter="transition ease-out duration-300"
                                    x-transition:enter-start="opacity-0 max-h-0"
                                    x-transition:enter-end="opacity-100 max-h-screen"
                                    x-transition:leave="transition ease-in duration-300"
                                    x-transition:leave-start="opacity-100 max-h-screen"
                                    x-transition:leave-end="opacity-0 max-h-0"
                            >
                                {chapter.sections
                                    .sort((a, b) => a.data.order - b.data.order)
                                    .map((section, j) => (
                                            <li class="py-2">
                                                <a href={`/books/${section.slug}`} class="hover:text-lavender">
                                                    <span x-show="showBengali">{numberToBengali(j + 1)})</span>
                                                    <span x-show="showTransliteration">{j + 1})</span>
                                                    {section.data.sectionTitle && (
                                                            <>
                                                                <BengaliText
                                                                        generateTransliteration={false}>{section.data.sectionTitle.bn}</BengaliText>
                                                                <Transliteration>{section.data.sectionTitle.en}</Transliteration>
                                                            </>)}
                                                </a>
                                            </li>))}
                            </ol>
                        </li>))}
    </ol>
</div>

<style>
    .book-contents ol {
        max-width: 100%;
    }

    .book-contents button {
        font-size: 1rem;
        font-weight: 500;
    }
</style>
